This is a skeleton for a basic Erlang environment.

The popular tool rake is used to automate a few handy tasks.  To get a complete
list of rake tasks, run:

  rake -T

To start coding, simply execute:

  rake new_app[test]

This will create a new application named test in a local library (the lib
directory).  To get started, look in lib/test-0.1/src.  There you can create
modules (.erl files) and they will be automatically compiled.  Two sample
modules are provided, that create a simple, skeleton application according to
the OTP design guidelines.

To compile everything, execute:

  rake build:compile

To get a live environment with your applications loaded, try:

  rake debug:console

To generate edoc documentation from your applications, try:

  rake build:doc

NOTE: Docs for each module are generated under lib/MOD-VER/doc.

To clean out generated files, try:

  rake build:clean

To run Erlang common_test test suites, try:

  rake test:run

NOTE: This will require common test to be "installed".  If you have the erl
executable in your path and sudo works, just run 'rake test:setup_ct' and it
will setup common_test for you.

To see the HTML reports from common_test, run:

rake test:report

This will use the 'open' command to display it in MacOS.  I currently don't
support other environments.

NOTE: I compile code coverage results, which are linked from the report.

There are many other rake tasks that support various things I use.  Perhaps the
neatest is that I have patched the heck-out of integrity, and have a working CI
environment with links to generated edoc and common_test reports.  If there is
enough interest, I'd be glad to try to package this up.

Good luck, and have a lot of fun!

